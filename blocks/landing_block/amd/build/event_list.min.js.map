{"version":3,"sources":["../src/event_list.js"],"names":["define","$","Notification","Templates","CustomEvents","CalendarEventsRepository","SELECTORS","EMPTY_MESSAGE","ROOT","EVENT_LIST","EVENT_LIST_CONTENT","EVENT_LIST_GROUP_CONTAINER","LOADING_ICON_CONTAINER","VIEW_MORE_BUTTON","TEMPLATES","EVENT_LIST_ITEMS","COURSE_EVENT_LIST_ITEMS","setLoadedAll","root","attr","hasLoadedAll","startLoading","loadingIcon","find","viewMoreButton","addClass","removeClass","prop","stopLoading","isLoading","hasClass","setHasContent","hasContent","updateContentVisibility","eventCount","hideContent","renderGroup","group","calendarEvents","templateName","render","events","done","html","js","appendNodeContents","timeUntilEvent","timestamp","event","orderTime","timesort","eventBelongsInContainer","container","todayTime","timeUntilContainerStart","timeUntilContainerEnd","timeUntilEventNeedsAction","getFilterCallbackForContainer","renderCount","when","apply","map","filter","length","then","load","promise","limit","courseId","lastId","midnight","Deferred","resolve","args","starttime","aftereventid","courseid","queryByCourse","queryByTime","result","id","fail","exception","always","registerEventListeners","activate","on","init","rootSelector"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to load and render the list of calendar events for a\n * given day range.\n *\n * @module     block_myoverview/event_list\n * @package    block_myoverview\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/notification', 'core/templates',\n        'core/custom_interaction_events',\n        'block_myoverview/calendar_events_repository'],\n        function($, Notification, Templates, CustomEvents, CalendarEventsRepository) {\n\n    var SECONDS_IN_DAY = 60 * 60 * 24;\n\n    var SELECTORS = {\n        EMPTY_MESSAGE: '[data-region=\"empty-message\"]',\n        ROOT: '[data-region=\"event-list-container\"]',\n        EVENT_LIST: '[data-region=\"event-list\"]',\n        EVENT_LIST_CONTENT: '[data-region=\"event-list-content\"]',\n        EVENT_LIST_GROUP_CONTAINER: '[data-region=\"event-list-group-container\"]',\n        LOADING_ICON_CONTAINER: '[data-region=\"loading-icon-container\"]',\n        VIEW_MORE_BUTTON: '[data-action=\"view-more\"]'\n    };\n\n    var TEMPLATES = {\n        EVENT_LIST_ITEMS: 'block_myoverview/event-list-items',\n        COURSE_EVENT_LIST_ITEMS: 'block_myoverview/course-event-list-items'\n    };\n\n    /**\n     * Set a flag on the element to indicate that it has completed\n     * loading all event data.\n     *\n     * @method setLoadedAll\n     * @private\n     * @param {object} root The container element\n     */\n    var setLoadedAll = function(root) {\n        root.attr('data-loaded-all', true);\n    };\n\n    /**\n     * Check if all event data has finished loading.\n     *\n     * @method hasLoadedAll\n     * @private\n     * @param {object} root The container element\n     * @return {bool} if the element has completed all loading\n     */\n    var hasLoadedAll = function(root) {\n        return !!root.attr('data-loaded-all');\n    };\n\n    /**\n     * Set the element state to loading.\n     *\n     * @method startLoading\n     * @private\n     * @param {object} root The container element\n     */\n    var startLoading = function(root) {\n        var loadingIcon = root.find(SELECTORS.LOADING_ICON_CONTAINER),\n            viewMoreButton = root.find(SELECTORS.VIEW_MORE_BUTTON);\n\n        root.addClass('loading');\n        loadingIcon.removeClass('hidden');\n        viewMoreButton.prop('disabled', true);\n    };\n\n    /**\n     * Remove the loading state from the element.\n     *\n     * @method stopLoading\n     * @private\n     * @param {object} root The container element\n     */\n    var stopLoading = function(root) {\n        var loadingIcon = root.find(SELECTORS.LOADING_ICON_CONTAINER),\n            viewMoreButton = root.find(SELECTORS.VIEW_MORE_BUTTON);\n\n        root.removeClass('loading');\n        loadingIcon.addClass('hidden');\n\n        if (!hasLoadedAll(root)) {\n            // Only enable the button if we've got more events to load.\n            viewMoreButton.prop('disabled', false);\n        }\n    };\n\n    /**\n     * Check if the element is currently loading some event data.\n     *\n     * @method isLoading\n     * @private\n     * @param {object} root The container element\n     * @returns {Boolean}\n     */\n    var isLoading = function(root) {\n        return root.hasClass('loading');\n    };\n\n    /**\n     * Flag the root element to remember that it contains events.\n     *\n     * @method setHasContent\n     * @private\n     * @param {object} root The container element\n     */\n    var setHasContent = function(root) {\n        root.attr('data-has-events', true);\n    };\n\n    /**\n     * Check if the root element has had events loaded.\n     *\n     * @method hasContent\n     * @private\n     * @param {object} root The container element\n     * @return {bool}\n     */\n    var hasContent = function(root) {\n        return root.attr('data-has-events') ? true : false;\n    };\n\n    /**\n     * Update the visibility of the content area. The content area\n     * is hidden if we have no events.\n     *\n     * @method updateContentVisibility\n     * @private\n     * @param {object} root The container element\n     * @param {int} eventCount A count of the events we just received.\n     */\n    var updateContentVisibility = function(root, eventCount) {\n        if (eventCount) {\n            // We've rendered some events, let's remember that.\n            setHasContent(root);\n        } else {\n            // If this is the first time trying to load events and\n            // we don't have any then there isn't any so let's show\n            // the empty message.\n            if (!hasContent(root)) {\n                hideContent(root);\n            }\n        }\n    };\n\n    /**\n     * Hide the content area and display the empty content message.\n     *\n     * @method hideContent\n     * @private\n     * @param {object} root The container element\n     */\n    var hideContent = function(root) {\n        root.find(SELECTORS.EVENT_LIST_CONTENT).addClass('hidden');\n        root.find(SELECTORS.EMPTY_MESSAGE).removeClass('hidden');\n    };\n\n    /**\n     * Render a group of calendar events and add them to the event\n     * list.\n     *\n     * @method renderGroup\n     * @private\n     * @param {object}  group           The group container element\n     * @param {array}   calendarEvents  The list of calendar events\n     * @param {string}  templateName    The template name\n     * @return {promise} Resolved when the elements are attached to the DOM\n     */\n    var renderGroup = function(group, calendarEvents, templateName) {\n\n        group.removeClass('hidden');\n\n        return Templates.render(\n            templateName,\n            {events: calendarEvents}\n        ).done(function(html, js) {\n            Templates.appendNodeContents(group.find(SELECTORS.EVENT_LIST), html, js);\n        });\n    };\n\n    /**\n     * Determine the time (in seconds) from the given timestamp until the calendar\n     * event will need actioning.\n     *\n     * @method timeUntilEvent\n     * @private\n     * @param {int}     timestamp   The time to compare with\n     * @param {object}  event       The calendar event\n     * @return {int}\n     */\n    var timeUntilEvent = function(timestamp, event) {\n        var orderTime = event.timesort || 0;\n        return orderTime - timestamp;\n    };\n\n    /**\n     * Check if the given calendar event should be added to the given event\n     * list group container. The event list group container will specify a\n     * day range for the time boundary it is interested in.\n     *\n     * If only a start day is specified for the container then it will be treated\n     * as an open catchment for all events that begin after that time.\n     *\n     * @method eventBelongsInContainer\n     * @private\n     * @param {object} root         The root element\n     * @param {object} event        The calendar event\n     * @param {object} container    The group event list container\n     * @return {bool}\n     */\n    var eventBelongsInContainer = function(root, event, container) {\n        var todayTime = root.attr('data-midnight'),\n            timeUntilContainerStart = +container.attr('data-start-day') * SECONDS_IN_DAY,\n            timeUntilContainerEnd = +container.attr('data-end-day') * SECONDS_IN_DAY,\n            timeUntilEventNeedsAction = timeUntilEvent(todayTime, event);\n\n        if (container.attr('data-end-day') === '') {\n            return timeUntilContainerStart <= timeUntilEventNeedsAction;\n        } else {\n            return timeUntilContainerStart <= timeUntilEventNeedsAction &&\n                   timeUntilEventNeedsAction < timeUntilContainerEnd;\n        }\n    };\n\n    /**\n     * Return a function that can be used to filter a list of events based on the day\n     * range specified on the given event list group container.\n     *\n     * @method getFilterCallbackForContainer\n     * @private\n     * @param {object} root      The root element\n     * @param {object} container Event list group container\n     * @return {function}\n     */\n    var getFilterCallbackForContainer = function(root, container) {\n        return function(event) {\n            return eventBelongsInContainer(root, event, $(container));\n        };\n    };\n\n    /**\n     * Render the given calendar events in the container element. The container\n     * elements must have a day range defined using data attributes that will be\n     * used to group the calendar events according to their order time.\n     *\n     * @method render\n     * @private\n     * @param {object}  root            The container element\n     * @param {array}   calendarEvents  A list of calendar events\n     * @return {promise} Resolved with a count of the number of rendered events\n     */\n    var render = function(root, calendarEvents) {\n        var renderCount = 0;\n        var templateName = TEMPLATES.EVENT_LIST_ITEMS;\n\n        if (root.attr('data-course-id')) {\n            templateName = TEMPLATES.COURSE_EVENT_LIST_ITEMS;\n        }\n\n        // Loop over each of the element list groups and find the set of calendar events\n        // that belong to that group (as defined by the group's day range). The matching\n        // list of calendar events are rendered and added to the DOM within that group.\n        return $.when.apply($, $.map(root.find(SELECTORS.EVENT_LIST_GROUP_CONTAINER), function(container) {\n            var events = calendarEvents.filter(getFilterCallbackForContainer(root, container));\n\n            if (events.length) {\n                renderCount += events.length;\n                return renderGroup($(container), events, templateName);\n            } else {\n                return null;\n            }\n        })).then(function() {\n            return renderCount;\n        });\n    };\n\n    /**\n     * Retrieve a list of calendar events, render and append them to the end of the\n     * existing list. The events will be loaded based on the set of data attributes\n     * on the root element.\n     *\n     * This function can be provided with a jQuery promise. If it is then it won't\n     * attempt to load data by itself, instead it will use the given promise.\n     *\n     * The provided promise must resolve with an an object that has an events key\n     * and value is an array of calendar events.\n     * E.g.\n     * { events: ['event 1', 'event 2'] }\n     *\n     * @method load\n     * @param {object} root The root element of the event list\n     * @param {object} promise A jQuery promise resolved with events\n     * @return {promise} A jquery promise\n     */\n    var load = function(root, promise) {\n        root = $(root);\n        var limit = +root.attr('data-limit'),\n            courseId = +root.attr('data-course-id'),\n            lastId = root.attr('data-last-id'),\n            midnight = root.attr('data-midnight'),\n            startTime = midnight - (14 * SECONDS_IN_DAY);\n\n        // Don't load twice.\n        if (isLoading(root)) {\n            return $.Deferred().resolve();\n        }\n\n        startLoading(root);\n\n        // If we haven't been provided a promise to resolve the\n        // data then we will load our own.\n        if (typeof promise == 'undefined') {\n            var args = {\n                starttime: startTime,\n                limit: limit,\n            };\n\n            if (lastId) {\n                args.aftereventid = lastId;\n            }\n\n            // If we have a course id then we only want events from that course.\n            if (courseId) {\n                args.courseid = courseId;\n                promise = CalendarEventsRepository.queryByCourse(args);\n            } else {\n                // Otherwise we want events from any course.\n                promise = CalendarEventsRepository.queryByTime(args);\n            }\n        }\n\n        // Request data from the server.\n        return promise.then(function(result) {\n            return result.events;\n        }).then(function(calendarEvents) {\n            if (!calendarEvents.length || (calendarEvents.length < limit)) {\n                // We have no more events so mark the list as done.\n                setLoadedAll(root);\n            }\n\n            if (calendarEvents.length) {\n                // Remember the last id we've seen.\n                root.attr('data-last-id', calendarEvents[calendarEvents.length - 1].id);\n\n                // Render the events.\n                return render(root, calendarEvents).then(function(renderCount) {\n                    updateContentVisibility(root, calendarEvents.length);\n\n                    if (renderCount < calendarEvents.length) {\n                        // if the number of events that was rendered is less than\n                        // the number we sent for rendering we can assume that there\n                        // are no groups to add them in. Since the ordering of the\n                        // events is guaranteed it means that any future requests will\n                        // also yield events that can't be rendered, so let's not bother\n                        // sending any more requests.\n                        setLoadedAll(root);\n                    }\n                });\n            } else {\n                updateContentVisibility(root, calendarEvents.length);\n            }\n        }).fail(\n            Notification.exception\n        ).always(function() {\n            stopLoading(root);\n        });\n    };\n\n    /**\n     * Register the event listeners for the container element.\n     *\n     * @method registerEventListeners\n     * @param {object} root The root element of the event list\n     */\n    var registerEventListeners = function(root) {\n        CustomEvents.define(root, [CustomEvents.events.activate]);\n        root.on(CustomEvents.events.activate, SELECTORS.VIEW_MORE_BUTTON, function() {\n            load(root);\n        });\n    };\n\n    return {\n        init: function(root) {\n            root = $(root);\n            load(root);\n            registerEventListeners(root);\n        },\n        registerEventListeners: registerEventListeners,\n        load: load,\n        rootSelector: SELECTORS.ROOT,\n    };\n});\n"],"file":"event_list.min.js"}