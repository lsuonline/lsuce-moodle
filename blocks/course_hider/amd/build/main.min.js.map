{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course Hider Tool\n *\n * @copyright 2008 onwards Louisiana State University\n * @copyright 2008 onwards David Lowe\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport const init = () => {\n\n    let allnone = document.getElementById('course_hider_all');\n    if (allnone !== null) {\n\n        allnone.addEventListener(\"change\", (event) => {\n            const container = document.querySelector(\"div.block_course_hider_container\");\n            const matches = container.getElementsByClassName(\"course_hider_toggle\");\n            matches.forEach(checkbox => {\n                checkbox.checked = event.target.checked;\n            });\n        });\n    }\n\n    const checkers = document.querySelector(\".course_hider_toggle\");\n    if (checkers !== null) {\n        checkers.addEventListener(\"change\", (event) => {\n            // If All/None is checked and one of the elements is unchecked then toggle All/None.\n            if (event.target.checked == false) {\n                document.getElementById('course_hider_all').checked = false;\n            } else {\n                // One was clicked to true, are they all true?\n                const container = document.querySelector(\"div.block_course_hider_container\");\n                const matches = container.getElementsByClassName(\"course_hider_toggle\");\n                var itstrue = true;\n                matches.forEach(checkbox => {\n                    if (checkbox.checked == false) {\n                        itstrue = false;\n                        return;\n                    }\n                });\n\n                if (itstrue == true) {\n                    document.getElementById('course_hider_all').checked = true;\n                }\n            }\n        });\n    }\n\n    const form = document.getElementById(\"course_hider_courses_selected\");\n    if (form !== null) {\n        form.addEventListener('submit', (event) => {\n            event.preventDefault(); // prevent the default form submission\n\n            // Let's get the lock value\n            const lock = document.getElementById('id_lockcourses');\n            const selected_lock = lock.options[lock.selectedIndex];\n            const selectedLockValue = selected_lock.value;\n\n            const hide = document.getElementById('id_hidecourses');\n            const selected_hide = lock.options[hide.selectedIndex];\n            const selectedHideValue = selected_hide.value;\n            const inputs = form.querySelectorAll('input.course_hider_toggle');\n\n            const formData = new FormData();\n            const inputValues = [];\n\n            formData.append(\"btnexecute\", true);\n            formData.append(\"lock\", selectedLockValue);\n            formData.append(\"hide\", selectedHideValue);\n            inputs.forEach((input) => {\n                if (input.checked) {\n                    inputValues.push(input.value);\n                }\n            });\n\n            formData.append(\"courses\", inputValues);\n\n            // Resubmit the form\n            const xhr = new XMLHttpRequest();\n            xhr.open(\"POST\", form.action, true);\n            xhr.send(formData);\n\n            xhr.onload = function() {\n                document.body.innerHTML = xhr.responseText;\n                window.console.log(xhr.responseText);\n            };\n        });\n    }\n};\n"],"names":["allnone","document","getElementById","addEventListener","event","querySelector","getElementsByClassName","forEach","checkbox","checked","target","checkers","matches","itstrue","form","preventDefault","lock","selectedLockValue","options","selectedIndex","value","hide","selectedHideValue","inputs","querySelectorAll","formData","FormData","inputValues","append","input","push","xhr","XMLHttpRequest","open","action","send","onload","body","innerHTML","responseText","window","console","log"],"mappings":"4JAuBoB,SAEZA,QAAUC,SAASC,eAAe,oBACtB,OAAZF,SAEAA,QAAQG,iBAAiB,UAAWC,QACdH,SAASI,cAAc,oCACfC,uBAAuB,uBACzCC,SAAQC,WACZA,SAASC,QAAUL,MAAMM,OAAOD,oBAKtCE,SAAWV,SAASI,cAAc,wBACvB,OAAbM,UACAA,SAASR,iBAAiB,UAAWC,WAEL,GAAxBA,MAAMM,OAAOD,QACbR,SAASC,eAAe,oBAAoBO,SAAU,MACnD,OAGGG,QADYX,SAASI,cAAc,oCACfC,uBAAuB,2BAC7CO,SAAU,EACdD,QAAQL,SAAQC,WACY,GAApBA,SAASC,UACTI,SAAU,MAKH,GAAXA,UACAZ,SAASC,eAAe,oBAAoBO,SAAU,aAMhEK,KAAOb,SAASC,eAAe,iCACxB,OAATY,MACAA,KAAKX,iBAAiB,UAAWC,QAC7BA,MAAMW,uBAGAC,KAAOf,SAASC,eAAe,kBAE/Be,kBADgBD,KAAKE,QAAQF,KAAKG,eACAC,MAElCC,KAAOpB,SAASC,eAAe,kBAE/BoB,kBADgBN,KAAKE,QAAQG,KAAKF,eACAC,MAClCG,OAAST,KAAKU,iBAAiB,6BAE/BC,SAAW,IAAIC,SACfC,YAAc,GAEpBF,SAASG,OAAO,cAAc,GAC9BH,SAASG,OAAO,OAAQX,mBACxBQ,SAASG,OAAO,OAAQN,mBACxBC,OAAOhB,SAASsB,QACRA,MAAMpB,SACNkB,YAAYG,KAAKD,MAAMT,UAI/BK,SAASG,OAAO,UAAWD,mBAGrBI,IAAM,IAAIC,eAChBD,IAAIE,KAAK,OAAQnB,KAAKoB,QAAQ,GAC9BH,IAAII,KAAKV,UAETM,IAAIK,OAAS,WACTnC,SAASoC,KAAKC,UAAYP,IAAIQ,aAC9BC,OAAOC,QAAQC,IAAIX,IAAIQ"}