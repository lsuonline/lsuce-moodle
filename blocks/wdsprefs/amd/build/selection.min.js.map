{"version":3,"file":"selection.min.js","sources":["../src/selection.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @package\n * @copyright  2025 onwards Louisiana State University\n * @copyright  2025 onwards Robert Russo & David Lowe\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery'],\n    function($) {\n    'use strict';\n    return {\n        /**\n         * This is the starting function for the splitter.\n         */\n        init: function() {\n            var available, bucket, changed, move_selected, move_to_available, move_to_bucket, selected;\n            $(\"input[name^='shell_name_']\").keyup(function() {\n                // console.log(\"SELECTION: input shell_name_\");\n                var id, value;\n                value = $(this).val();\n                id = $(this).attr(\"name\");\n                $(\"#\" + id).text(value);\n                return $(\"input[name='\" + id + \"_hidden']\").val(value);\n            });\n\n            $(\"a[href^='shell_']\").click(function() {\n                // console.log(\"SELECTION: a shell_name_\");\n                var display, id, name;\n                id = $(this).attr(\"href\").split(\"_\")[1];\n                name = $(\"input[name='shell_name_\" + id + \"']\");\n                display = $(name).css(\"display\");\n                if (display === \"none\") {\n                    $(name).css(\"display\", \"block\");\n                    $(name).focus();\n                    $(name).select();\n                } else {\n                    $(name).css(\"display\", \"none\");\n                }\n                return false;\n            });\n\n            selected = function() {\n                // console.log(\"SELECTION: selected - \");\n                return $(\"input:checked[name='selected_shell']\").attr(\"value\");\n            };\n\n            available = $(\"select[name='before[]']\");\n\n            bucket = function() {\n                // console.log(\"SELECTION: bucket\");\n                return $(\"select[name='shell_\" + selected() + \"[]']\");\n            };\n\n            changed = function() {\n                // console.log(\"SELECTION: changed\");\n                var compressed, id, toValue, values;\n                id = selected();\n                values = $(\"input[name='shell_values_\" + id + \"']\");\n                toValue = function(i, child) {\n                    return $(child).val();\n                };\n                compressed = $(bucket()).children().map(toValue);\n                return values.val($(compressed).toArray().join(\",\"));\n            };\n\n            move_selected = function(from, to) {\n                // console.log(\"SELECTION: move_selected\");\n                var children;\n                children = $(from).children(\":selected\");\n                $(to).append(children);\n                return changed();\n            };\n\n            move_to_bucket = function() {\n                // console.log(\"SELECTION: move_to_buckete\");\n                return move_selected(available, bucket());\n            };\n\n            move_to_available = function() {\n                // console.log(\"SELECTION: move_to_available\");\n                return move_selected(bucket(), available);\n            };\n\n            $(\"input[name='move_right']\").click(move_to_bucket);\n            return $(\"input[name='move_left']\").click(move_to_available);\n            // $(\"input[name='move_left']\").click(move_to_available);\n        }\n    };\n});\n"],"names":["define","$","init","available","bucket","changed","move_selected","move_to_available","move_to_bucket","selected","keyup","id","value","this","val","attr","text","click","name","split","css","focus","select","compressed","toValue","values","i","child","children","map","toArray","join","from","to","append"],"mappings":";;;;;;AAsBAA,kCAAO,CAAC,WACJ,SAASC,SAEF,CAIHC,KAAM,eACEC,UAAWC,OAAQC,QAASC,cAAeC,kBAAmBC,eAAgBC,gBAClFR,EAAE,8BAA8BS,OAAM,eAE9BC,GAAIC,aACRA,MAAQX,EAAEY,MAAMC,MAChBH,GAAKV,EAAEY,MAAME,KAAK,QAClBd,EAAE,IAAMU,IAAIK,KAAKJ,OACVX,EAAE,eAAiBU,GAAK,aAAaG,IAAIF,UAGpDX,EAAE,qBAAqBgB,OAAM,eAEZN,GAAIO,YACjBP,GAAKV,EAAEY,MAAME,KAAK,QAAQI,MAAM,KAAK,GACrCD,KAAOjB,EAAE,0BAA4BU,GAAK,MAE1B,SADNV,EAAEiB,MAAME,IAAI,YAElBnB,EAAEiB,MAAME,IAAI,UAAW,SACvBnB,EAAEiB,MAAMG,QACRpB,EAAEiB,MAAMI,UAERrB,EAAEiB,MAAME,IAAI,UAAW,SAEpB,KAGXX,SAAW,kBAEAR,EAAE,wCAAwCc,KAAK,UAG1DZ,UAAYF,EAAE,2BAEdG,OAAS,kBAEEH,EAAE,sBAAwBQ,WAAa,SAGlDJ,QAAU,eAEFkB,WAAYZ,GAAIa,QAASC,cAC7Bd,GAAKF,WACLgB,OAASxB,EAAE,4BAA8BU,GAAK,MAC9Ca,QAAU,SAASE,EAAGC,cACX1B,EAAE0B,OAAOb,OAEpBS,WAAatB,EAAEG,UAAUwB,WAAWC,IAAIL,SACjCC,OAAOX,IAAIb,EAAEsB,YAAYO,UAAUC,KAAK,OAGnDzB,cAAgB,SAAS0B,KAAMC,QAEvBL,gBACJA,SAAW3B,EAAE+B,MAAMJ,SAAS,aAC5B3B,EAAEgC,IAAIC,OAAON,UACNvB,WAGXG,eAAiB,kBAENF,cAAcH,UAAWC,WAGpCG,kBAAoB,kBAETD,cAAcF,SAAUD,YAGnCF,EAAE,4BAA4BgB,MAAMT,gBAC7BP,EAAE,2BAA2BgB,MAAMV"}