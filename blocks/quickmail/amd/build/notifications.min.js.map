{"version":3,"file":"notifications.min.js","sources":["../src/notifications.js"],"sourcesContent":["define(['jquery', 'core/notification'], function($, notification) {\n    'use strict';\n\n    return {\n\n        /**\n         * A simple way to call the Moodle core notification system.\n         * Type can be either: success, warning, info, error\n         *  Example:\n         *  noti.callNoti({\n         *      message: \"This is a success test\",\n         *      type: \"success\"\n         *  });\n         * @param {obj} data A simple object with the 'message' and 'type' of notification.\n         * @return void\n         */\n        callNoti: function(data) {\n            if (!data.hasOwnProperty('message')) {\n                console.log(\"ERROR -> Notification was called but with no message, aborting.\");\n            }\n            if (!data.hasOwnProperty('type')) {\n                // default to info\n                data.type = \"info\";\n            }\n            notification.addNotification(data);\n        },\n        /**\n         * Store the reponse object to showcase a message after reload.\n         * @param {obj} data Server Response {'success', 'data', 'msg'}\n         *\n         * @return void\n         */\n        storeMsg: function(data) {\n            // Save data to sessionStorage\n            if (data.hasOwnProperty('success')) {\n                sessionStorage.setItem('sent_delete_success', data.success);\n                sessionStorage.setItem('sent_delete_msg', data.msg);\n            } else {\n                console.log(\"NOTI -> Error: There was an error with the data from the server, please contact Moodle Dev Team.\");\n            }\n        },\n\n        /**\n         *  If a message is stored then show the notification and remove it.\n         * @return void\n         */\n        showMsg: function() {\n            // Save data to sessionStorage\n            if (sessionStorage.getItem('sent_delete_msg')) {\n                this.callNoti({\n                    message: sessionStorage.getItem('sent_delete_msg'),\n                    type: sessionStorage.getItem('sent_delete_success')\n                });\n                // Remove saved data from sessionStorage\n                sessionStorage.removeItem('sent_delete_msg');\n                sessionStorage.removeItem('sent_delete_success');\n            }\n        }\n    };\n});"],"names":["define","$","notification","callNoti","data","hasOwnProperty","console","log","type","addNotification","storeMsg","sessionStorage","setItem","success","msg","showMsg","getItem","message","removeItem"],"mappings":"AAAAA,uCAAO,CAAC,SAAU,sBAAsB,SAASC,EAAGC,oBAGzC,CAaHC,SAAU,SAASC,MACVA,KAAKC,eAAe,YACrBC,QAAQC,IAAI,mEAEXH,KAAKC,eAAe,UAErBD,KAAKI,KAAO,QAEhBN,aAAaO,gBAAgBL,OAQjCM,SAAU,SAASN,MAEXA,KAAKC,eAAe,YACpBM,eAAeC,QAAQ,sBAAuBR,KAAKS,SACnDF,eAAeC,QAAQ,kBAAmBR,KAAKU,MAE/CR,QAAQC,IAAI,qGAQpBQ,QAAS,WAEDJ,eAAeK,QAAQ,0BAClBb,SAAS,CACVc,QAASN,eAAeK,QAAQ,mBAChCR,KAAMG,eAAeK,QAAQ,yBAGjCL,eAAeO,WAAW,mBAC1BP,eAAeO,WAAW"}