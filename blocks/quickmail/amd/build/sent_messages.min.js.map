{"version":3,"sources":["../src/sent_messages.js"],"names":["define","$","noti","jaxy","removeSentItems","data","console","log","qmAjax","JSON","stringify","then","response","storeMsg","location","reload","catch","init","showMsg","on","ev","preventDefault","click","counter","length","show","hide","toggle","checked","prop","remove_list","each","push"],"mappings":"AAAAA,OAAM,iCAAC,CACH,QADG,CAEH,+BAFG,CAGH,sBAHG,CAAD,CAIH,SAASC,CAAT,CAAYC,CAAZ,CAAkBC,CAAlB,CAAwB,CACvB,aAEA,GAAIC,CAAAA,CAAe,CAAG,SAASC,CAAT,CAAe,CACjCC,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAsCF,CAAtC,EACAF,CAAI,CAACK,MAAL,CAAYC,IAAI,CAACC,SAAL,CAAe,CACvB,KAAQ,oBADe,CAEvB,OAAU,CACN,IAAOL,CADD,CAFa,CAKvB,KAAQ,mBALe,CAMvB,MAAS,kBANc,CAAf,CAAZ,EAQIM,IARJ,CAQS,SAAUC,CAAV,CAAoB,CACzBV,CAAI,CAACW,QAAL,CAAcD,CAAd,EASAE,QAAQ,CAACC,MAAT,EACH,CAnBD,EAmBGC,KAnBH,EAoBH,CAtBD,CAwBA,MAAO,CACHC,IAAI,CAAE,eAAW,CAEbf,CAAI,CAACgB,OAAL,GAEAZ,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAEAN,CAAC,CAAC,eAAD,CAAD,CAAmBkB,EAAnB,CAAsB,OAAtB,CAA+B,cAA/B,CAA+C,SAAUC,CAAV,CAAc,CACzDA,CAAE,CAACC,cAAH,GACAf,OAAO,CAACC,GAAR,CAAY,mBAAqBN,CAAC,CAAC,IAAD,CAAD,CAAQI,IAAR,CAAa,OAAb,CAAjC,EACAD,CAAe,CAAC,CAACH,CAAC,CAAC,IAAD,CAAD,CAAQI,IAAR,CAAa,OAAb,CAAD,CAAD,CAClB,CAJD,EAQAJ,CAAC,CAAC,WAAD,CAAD,CAAeqB,KAAf,CAAqB,UAAW,CAC5B,GAAIC,CAAAA,CAAO,CAAGtB,CAAC,CAAC,mBAAD,CAAD,CAAuBuB,MAArC,CACAlB,OAAO,CAACC,GAAR,CAAY,yBAA2BgB,CAAvC,EACA,GAAc,CAAV,CAAAA,CAAJ,CAAiB,CACbtB,CAAC,CAAC,wBAAD,CAAD,CAA4BwB,IAA5B,EACH,CAFD,IAEO,CACHxB,CAAC,CAAC,wBAAD,CAAD,CAA4ByB,IAA5B,EACH,CACJ,CARD,EAWAzB,CAAC,CAAC,mBAAD,CAAD,CAAuBqB,KAAvB,CAA6B,UAAY,CACrCrB,CAAC,CAAC,wBAAD,CAAD,CAA4B0B,MAA5B,CAAmC,KAAKC,OAAxC,EACA3B,CAAC,CAAC,gBAAD,CAAD,CAAoB4B,IAApB,CAAyB,SAAzB,CAAoC,KAAKD,OAAzC,CACH,CAHD,EAMA3B,CAAC,CAAC,eAAD,CAAD,CAAmBkB,EAAnB,CAAsB,OAAtB,CAA+B,wBAA/B,CAAyD,SAAUC,CAAV,CAAc,CACnEA,CAAE,CAACC,cAAH,GACA,GAAIS,CAAAA,CAAW,CAAG,EAAlB,CACA7B,CAAC,CAAC,4BAAD,CAAD,CAAgC8B,IAAhC,CAAqC,UAAW,CAC5CD,CAAW,CAACE,IAAZ,CAAiB/B,CAAC,CAAC,IAAD,CAAD,CAAQI,IAAR,CAAa,OAAb,CAAjB,CACH,CAFD,EAGAD,CAAe,CAAC0B,CAAD,CAClB,CAPD,CAQH,CAxCE,CA0CV,CAzEK,CAAN","sourcesContent":["define([\n    'jquery',\n    'block_quickmail/notifications',\n    'block_quickmail/jaxy'\n], function($, noti, jaxy) {\n    'use strict';\n\n    let removeSentItems = function(data) {\n        console.log(\"What are the item(s): \", data);\n        jaxy.qmAjax(JSON.stringify({\n            'call': 'removeSentMessages',\n            'params': {\n                'ids': data\n            },\n            'path': 'classes/external/',\n            'class': 'sentMessagesCtrl'\n        // eslint-disable-next-line promise/always-return\n        })).then(function (response) {\n            noti.storeMsg(response);\n            /* TODO: To reduce server calls via page reload this could remove table\n             rows but needs to factor the pagination results.\n             for (var i of response.data.ids) {\n                 // $(this).find(\"[data-msgid='\" + i + \"']\").closest(\"tr\").remove();\n                 $('.qm_sent_msgs').find(\"[data-msgid='\" + i + \"']\").closest(\"tr\").remove();\n             }\n             But instead, let's just reload the page\n            */\n            location.reload();\n        }).catch ();\n    };\n\n    return {\n        init: function() {\n            // Show any pending messages\n            noti.showMsg();\n\n            console.log(\"sent_messages => init() => START\");\n            // Single Click Delete (Trash Icon)\n            $('.qm_sent_msgs').on('click', '.qm_sm_trash', function (ev) {\n                ev.preventDefault();\n                console.log(\"What is the id: \" + $(this).data(\"msgid\"));\n                removeSentItems([$(this).data(\"msgid\")]);\n            });\n\n            // Single Checkbox Click\n            // If more than 1 checkbox is checked then show the \"remove selected\" button.\n            $('.qm_sm_cb').click(function() {\n                let counter = $(\":checkbox:checked\").length;\n                console.log(\"How many are checked: \" + counter);\n                if (counter > 1) {\n                    $(\"#qm_sm_selected_remove\").show();\n                } else {\n                    $(\"#qm_sm_selected_remove\").hide();\n                }\n            });\n\n            // Select ALL Checkboxes\n            $(\"#qm_sm_select_all\").click(function () {\n                $(\"#qm_sm_selected_remove\").toggle(this.checked);\n                $('input:checkbox').prop('checked', this.checked);\n            });\n\n            // Remove Selected Button Click\n            $('.qm_sent_msgs').on('click', '#qm_sm_selected_remove', function (ev) {\n                ev.preventDefault();\n                let remove_list = [];\n                $(\".qm_sm_cb:checkbox:checked\").each(function() {\n                    remove_list.push($(this).data(\"msgid\"));\n                });\n                removeSentItems(remove_list);\n            });\n        }\n    };\n});\n"],"file":"sent_messages.min.js"}