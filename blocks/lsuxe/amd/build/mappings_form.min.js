define ("block_lsuxe/mappings_form",["jquery","block_lsuxe/xe_lib","block_lsuxe/notifications"],function(a,b,c){'use strict';return{getTokenReady:function getTokenReady(){var c=a("#id_available_moodle_instances option:selected").text();b.getTokenForURL(c).then(function(a){if(!0==a.success){sessionStorage.setItem("currentToken",a.data);sessionStorage.setItem("currentUrl",c)}})},getGroupData:function getGroupData(a){return b.jaxyPromise({call:"getGroupData",params:a,class:"router"})},setHiddenValue:function setHiddenValue(b,c){a("input[name="+b+"]").val(c)},verifySourceCourse:function verifySourceCourse(a){return b.jaxyPromise({call:"verifyCourse",params:a,class:"router"})},verifyDestCourse:function verifyDestCourse(a){var c={type:"GET",url:sessionStorage.getItem("currentUrl")+"/webservice/rest/server.php",data:{wstoken:sessionStorage.getItem("currentToken"),wsfunction:"core_course_get_courses_by_field",moodlewsrestformat:"json",field:"shortname",value:a.coursename}};return b.jaxyRemotePromise(c)},verifyDest:function verifyDest(b){var d=this;console.log("verifyDest() -> what is jqo: ",b);console.log("mappings_form -> verifyDest() -> what is this: ",this);var e=a("#id_destcourseshortname").val();d.verifyDestCourse({coursename:e}).then(function(a){if("courses"in a){if(1==a.courses.length){d.setHiddenValue("destcourseid",a.courses[0].id);c.callNoti({message:"Destination course is there and waiting for you.",type:"success"})}else{c.callNoti({message:"There seems to be more than one course with that shortname.",type:"warn"})}}else{c.callNoti({message:"The course: "+e+" was not found on the destination server.",type:"error"})}})},verifySource:function verifySource(b){var d=this;console.log("verifySource() -> what is jqo: ",b);console.log("mappings_form -> verifySource() -> what is this: ",this);var e=a("#id_srccourseshortname").val(),f="";if("1"==sessionStorage.getItem("xes_autocomplete")){f=a("#id_srccoursegroupnameselect").val()}else{f=a("#id_srccoursegroupname").val()}if(1>e.length){c.callNoti({message:"Ooops, you forgot to enter a course short name",type:"error"});return}if(1>f.length){c.callNoti({message:"Ooops, you forgot to enter a group name",type:"error"});return}d.verifySourceCourse({coursename:e,groupname:f}).then(function(a){if(!1==a.success){c.callNoti({message:a.msg,type:"error"})}else{d.setHiddenValue("srccourseid",a.data.id);d.setHiddenValue("srccoursegroupid",a.data.groupid);c.callNoti({message:"Everything checks out for the sourse course and group.",type:"success"})}})},updateHidden:function updateHidden(b){var c=this,d=a(b).find("option:selected").attr("value"),e=a(b).find("option:selected").text();c.setHiddenValue("srccoursegroupname",e);c.setHiddenValue("srccoursegroupid",d)},srcCourse:function srcCourse(b){var c=this;if(b.val()){c.getGroupData({courseid:b.val(),coursename:a("#id_srccourseshortname option:selected").text()}).then(function(b){if(1==b.count){a("#id_srccoursegroupnameselect").val(b.data.groupname);a("#id_srccoursegroupname").val(b.data.groupname)}else if(1<b.count){a("#id_srccoursegroupnameselect").empty();var d="";for(var e in b.data){if(""==d){d={groupid:b.data[e].groupid,groupname:b.data[e].groupname}}a("#id_srccoursegroupnameselect").append(a("<option></option>").attr("value",b.data[e].groupid).text(b.data[e].groupname))}c.setHiddenValue("srccoursegroupname",d.groupname);c.setHiddenValue("srccoursegroupid",d.groupid)}})}else{a("#id_srccoursegroupnameselect").empty();a("#id_srccoursegroupnametext").text();a("#id_srccoursegroupnameselect").append(a("<option></option>").attr("value",0).text("Please search for a course first"))}},destCourse:function destCourse(a){console.log("destCourse() -> what is jqo: ",a);console.log("mappings_form -> destCourse() -> what is this: ",this)}}});
//# sourceMappingURL=mappings_form.min.js.map
