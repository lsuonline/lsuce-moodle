{"version":3,"sources":["../src/renderer.js"],"names":["define","$","templates","HB","fetchAndLoad","processPage","data","getSnippet","changePage","showPage","page","each","temp_that","attr","show","text","localStorage","hide","that","render","then","html","js","appendNodeContents","fail","console","log","setSnippet"],"mappings":"AACAA,OAAM,sBAAC,CACH,QADG,CAEH,gBAFG,CAGH,qBAHG,CAAD,CAIH,SAASC,CAAT,CAAYC,CAAZ,CAAuBC,CAAvB,CAA2B,CAEtB,aACA,MAAO,CAEHC,YAAY,CAAE,uBAAW,CAaxB,CAfE,CAuBHC,WAAW,CAAE,qBAASC,CAAT,CAAe,CAKxB,KAAKC,UAAL,CAAgBD,CAAhB,EACAH,CAAE,CAACK,UAAH,CAAcF,CAAd,CACH,CA9BE,CAgCHG,QAAQ,CAAE,kBAAUC,CAAV,CAAgB,CAEtBT,CAAC,CAAC,kBAAD,CAAD,CAAsBU,IAAtB,CAA4B,UAAW,CACnC,GAAIC,CAAAA,CAAS,CAAGX,CAAC,CAAC,IAAD,CAAjB,CAEA,GAAIW,CAAS,CAACC,IAAV,CAAe,IAAf,GAAwBH,CAA5B,CAAkC,CAC9BE,CAAS,CAACE,IAAV,GAGAb,CAAC,CAAC,eAAD,CAAD,CAAmBc,IAAnB,CAAwBC,YAAY,CADnBN,CAAI,CAAG,QACY,CAApC,CACH,CALD,IAKO,CACHE,CAAS,CAACK,IAAV,EACH,CACJ,CAXD,CAYH,CA9CE,CAgDHV,UAAU,CAAE,oBAASG,CAAT,CAAe,CAEvB,GACAQ,CAAAA,CAAI,CAAG,IADP,CAGA,GAA2B,OAAvB,GAAAF,YAAY,CAACN,CAAD,CAAhB,CAAoC,CAEhCR,CAAS,CAACiB,MAAV,CAAiB,aAAeT,CAAhC,CALU,EAKV,EAGCU,IAHD,CAGM,SAASC,CAAT,CAAeC,CAAf,CAAmB,CAKrBpB,CAAS,CAACqB,kBAAV,CAA6B,oBAA7B,CAAmDF,CAAnD,CAAyDC,CAAzD,EAGAN,YAAY,CAACN,CAAD,CAAZ,IACAQ,CAAI,CAACT,QAAL,CAAcC,CAAd,CACH,CAbD,EAaGc,IAbH,CAaQ,UAAW,CAEfC,OAAO,CAACC,GAAR,CAAY,yEAAZ,CACH,CAhBD,CAkBH,CApBD,IAoBO,CACH,KAAKjB,QAAL,CAAcC,CAAd,CACH,CACJ,CA5EE,CA8EHiB,UAAU,CAAE,oBAASrB,CAAT,CAAe,CACvBU,YAAY,CAACV,CAAI,CAACI,IAAN,CAAZ,GACH,CAhFE,CAkFV,CAzFC,CAAN","sourcesContent":["\ndefine([\n    'jquery',\n    'core/templates',\n    'local_tcs/heartbeat'\n], function($, templates, HB) {\n\n        'use strict';\n        return {\n\n            fetchAndLoad: function() {\n                // console.log(\"fetchAndLoad() -> START -------------\");\n\n                // ok, the main page has loaded and now we have other sub-pages that\n                // could be in localCache. If not then fetch and store.\n                /*\n                localStorage.stashy.foreach(function(chunk) {\n                    big_dump += chunk;\n                });\n                console.log(\"What is big_dump: \" + big_dump);\n                // now let's append all the cached pages.\n                $('#tcs_page_switcher').append(big_dump);\n                */\n            },\n\n            /**\n             * Process the page that has been clicked\n             * @method fetchSWE\n             * @param {object} args The request arguments\n             * @return {promise} Resolved with an array of the calendar events\n             */\n            processPage: function(data) {\n                // in blocks/myoverview/amd/src/tab_preferences has an example of saving\n                // the pages state and preferences\n                // console.log(\"What is data: \" + data);\n                // data will be the page, page_dashboard, page_examlist\n                this.getSnippet(data);\n                HB.changePage(data);\n            },\n\n            showPage: function (page) {\n                // console.log(\"renderer -> showPage() -> what is the page: \" + page);\n                $('.tcs_page_loader').each( function() {\n                    var temp_that = $(this);\n\n                    if (temp_that.attr('id') == page) {\n                        temp_that.show();\n                        // make sure the title of the page is updated.\n                        var page_title = page + \"_title\";\n                        $('.tcs_db_title').text(localStorage[page_title]);\n                    } else {\n                        temp_that.hide();\n                    }\n                });\n            },\n\n            getSnippet: function(page) {\n                // let's check to see if this template is stored\n                var context = {},\n                that = this;\n\n                if (localStorage[page] === \"false\") {\n                    // This will call the function to load and render our template.\n                    templates.render('local_tcs/' + page, context)\n\n                    // It returns a promise that needs to be resoved.\n                    .then(function(html, js) {\n                        // Here eventually I have my compiled template, and any javascript that it generated.\n                        // The templates object has append, prepend and replace functions.\n\n                        // templates.replaceNodeContents('#tcs_page_switcher', html, js);\n                        templates.appendNodeContents('#tcs_page_switcher', html, js);\n\n                        // Save the state of the store to true to avoid re-appending\n                        localStorage[page] = true;\n                        that.showPage(page);\n                    }).fail(function() {\n                        // Deal with this exception (I recommend core/notify exception function for this).\n                        console.log(\"tcs/renderer.js -> getSnippet() - FAIL, the ajax failed to get template\");\n                    });\n\n                } else {\n                    this.showPage(page);\n                }\n            },\n\n            setSnippet: function(data) {\n                localStorage[data.page] = true;\n            },\n        };\n    }\n);"],"file":"renderer.min.js"}