define ("local_tcs/tcs_autocomp_exam",["jquery","local_tcs/jaxy","local_tcs/tcs_lib","local_tcs/_libs/jquery.autocomplete","local_tcs/tcs_autocomp","core/modal_factory","core/modal_events","core/templates"],function(a,b,c,d,e,f,g,h){'use strict';return{loadUserExams:function loadUserExams(a){var c=new Promise(function(c){b.tcsAjax(JSON.stringify({call:"loadUserExams",params:{userid:a.data.uofl_id,username:a.data.username,isnum:!0,ax:!0},class:"StudentListAjax"})).then(function(a){c(a)})});return c},addUserAdmin:function addUserAdmin(a){return c.jaxyPromise({call:"addUser",params:a,class:"UserAdmin"})},removeUserAdmin:function removeUserAdmin(a){return c.jaxyPromise({call:"removeUser",params:a,class:"UserAdmin"})},addUserModal:function addUserModal(b){var d=this;f.create({type:f.types.SAVE_CANCEL,title:"Add TCS Admin User",body:h.render("local_tcs/modal_adduseradmin",b.data),large:!0}).then(function(b){b.setSaveButtonText("Add User");var e=b.getRoot();e.on(g.save,function(){d.addUserAdmin({id:a("#tcs_uaf_id").val(),username:a("#tcs_uaf_username").val(),access_level:a("input[name='tcs_user_admin_form']:checked").val()}).then(function(b){a("#tcs_user_admin_table").bootstrapTable("insertRow",{index:0,row:{id:b.data.id,userid:b.data.userid,name:b.data.name,username:b.data.username,access_level:b.data.access_level,exams:b.data.exams}});c.showMessage(b)})});b.getRoot().on(g.hidden,function(){console.log("Modal is now going by by bitch");a(".tcs_autocomp_in").val("");a(".tcs_autocomp_in").focus();b.destroy()});b.show()})},checkForm:function checkForm(){return a("input[name='tcs_exam_check']:checked").val()&&a("input[name='tcs_identity_check']:checked").val()&&a("input[name='exam_room_check']:checked").val()},onSelect:function onSelect(a){this.addUserModal(a)},onSearchComplete:function onSearchComplete(){console.log("onSearchComplete -> This function is dead")},initiateAutoComp:function initiateAutoComp(b){var d=this;e.initiateAutoComp(b,d,"#autocomplete_admin");a("body").on("click","#tcs_remove_user_admin",function(){var b=a("#tcs_user_admin_table").bootstrapTable("getRowByUniqueId",a(this).data("id"));d.removeUserAdmin({userid:b.userid,rowid:b.id}).then(function(b){if("success"==b.msg_type){a("#tcs_user_admin_table").bootstrapTable("remove",{field:"id",values:b.rowid.toString()});c.showMessage(b)}else{console.log("ERROR with removing user")}})})}}});
//# sourceMappingURL=tcs_autocomp_exam.min.js.map
