{"version":3,"sources":["../src/tcs_autocomp.js"],"names":["define","$","$auto_obj","initiateAutoComp","users","calling_obj","tag","focus","autocomplete","lookup","lookupLimit","triggerSelectOnValidInput","onSelect","suggestion","onHint","onSearchComplete","param1","param2","length","localStorage","onInvalidateSelection"],"mappings":"AAAAA,OAAM,0BAAC,CACH,QADG,CAEH,gBAFG,CAGH,mBAHG,CAIH,qCAJG,CAAD,CAaH,SAAUC,CAAV,CAAyC,CACxC,aAQA,GAAIC,CAAAA,CAAS,CAAG,IAAhB,CAGA,MAAO,CAqBHC,gBAAgB,CAAE,0BAAUC,CAAV,CAAiBC,CAAjB,CAA8BC,CAA9B,CAAmC,CAQjDJ,CAAS,CAAGD,CAAC,CAACK,CAAD,CAAb,CACAJ,CAAS,CAACK,KAAV,GACAL,CAAS,CAACM,YAAV,CAAuB,CAEnBC,MAAM,CAAEL,CAFW,CAGnBM,WAAW,CAAE,EAHM,CASnBC,yBAAyB,CAAE,oCAAY,CAGtC,CAZkB,CAanBC,QAAQ,CAAE,kBAAUC,CAAV,CAAsB,CAG5BR,CAAW,CAACO,QAAZ,CAAqBC,CAArB,CACH,CAjBkB,CAkBnBC,MAAM,CAAE,iBAAY,CAGnB,CArBkB,CAsBnBC,gBAAgB,CAAE,0BAAUC,CAAV,CAAkBC,CAAlB,CAA0B,CAIxC,GAAqB,CAAjB,EAAAA,CAAM,CAACC,MAAX,CAAwB,CACpB,GAAuC,GAAnC,EAAAC,YAAY,gBAAhB,CAA4C,CAExCd,CAAW,CAACU,gBAAZ,CAA6BE,CAAM,CAAC,CAAD,CAAnC,CACH,CACJ,CAEJ,CAjCkB,CAkCnBG,qBAAqB,CAAE,gCAAY,CAGlC,CArCkB,CAAvB,CAwIH,CAvKE,CAyKV,CAlMK,CAAN","sourcesContent":["define([\n    'jquery',\n    'local_tcs/jaxy',\n    'local_tcs/tcs_lib',\n    'local_tcs/_libs/jquery.autocomplete'\n    // 'core/modal_factory',\n    // 'core/modal_events',\n    // 'core/templates',\n\n    // 'local_tcs/tcs_student_table'\n    // 'local_tcs/PNotifyButtons'\n// ], function ($, jaxy, TCSLib, autocomplete, ModalFactory, ModalEvents, Templates, StudentTable) {\n    /* eslint-disable */\n], function ($, jaxy, TCSLib, autocomplete) {\n    'use strict';\n    /* eslint-enable */\n    // var keyStrokeCount = 0,\n    //     isBarCodeReader = 0,\n    //     temp_userid = 0,\n    //     mask = 0,\n    //     stored_idnumber = 0,\n\n    var $auto_obj = null;\n\n    // TODO: Make default select on radio buttons, right now it's last selection\n    return {\n        /*\n        checkForm: function () {\n\n            console.log(\"Do we have exam_id: \" + $(\"input[name='tcs_exam_check']:checked\").val());\n            console.log(\"Do we have id_type: \" + $(\"input[name='tcs_identity_check']:checked\").val());\n            console.log(\"Do we have room: \" + $(\"input[name='exam_room_check']:checked\").val());\n            console.log(\"Do we have comments: \" + $('#tcs_comments_on_student').val());\n\n            return $(\"input[name='tcs_exam_check']:checked\").val() &&\n                $(\"input[name='tcs_identity_check']:checked\").val() &&\n                $(\"input[name='exam_room_check']:checked\").val();\n        },\n        */\n        // ========================================================================================\n        // ========================================================================================\n        // ========================================================================================\n        /** START - Initialize The AutoComplete\n         * Description: Initialize The AutoComplete and register any binding events.\n         * @param {object} a list of users to use for searching\n         */\n        initiateAutoComp: function (users, calling_obj, tag) {\n            // currently trying this one:\n            // https://github.com/devbridge/jQuery-Autocomplete\n            // console.log(\"initiateAutoComp() -> going to initiate autocomplete\");\n            // console.log(\"initiateAutoComp() -> what is users: \", users);\n            // $('#autocomplete').focus();\n            // $('#autocomplete').autocomplete({\n\n            $auto_obj = $(tag);\n            $auto_obj.focus();\n            $auto_obj.autocomplete({\n\n                lookup: users,\n                lookupLimit: 20,\n                // lookupFilter: function(suggestion, originalQuery, queryLowerCase) {\n                // var re = new RegExp('\\\\b' + $.Autocomplete.utils.escapeRegExChars(queryLowerCase), 'gi');\n                // var re = new RegExp(originalQuery, 'gi');\n                // return re.test(suggestion.data.uofl_id);\n                // },\n                triggerSelectOnValidInput: function () {\n                    // console.log(\"triggerSelectOnValidInput() -> Do Stuff........\");\n\n                },\n                onSelect: function (suggestion) {\n                    // console.log(\"initiateAutoComp -> onSelect() -> Do Stuff........\");\n                    // console.log(\"initiateAutoComp -> onSelect() -> going to call onSelect \");\n                    calling_obj.onSelect(suggestion);\n                },\n                onHint: function () {\n                    // console.log(\"onHint() -> Do Stuff........\");\n                    // $('#autocomplete-ajax-x').val(hint);\n                },\n                onSearchComplete: function (param1, param2) {\n                    // console.log(\"initiateAutoComp -> onSearchComplete() -> Typing........\");\n                    // console.log(\"initiateAutoComp -> onSearchComplete() -> is there a param1 passed in: \", param1);\n                    // console.log(\"initiateAutoComp -> onSearchComplete() -> is there a param2 passed in: \", param2);\n                    if (param2.length == 1) {\n                        if (localStorage[\"enter_to_finish\"] == \"1\") {\n                            // console.log(\"@@@@@@@@@@@ ===>>>> initiateAutoComp -> onSearchComplete()\");\n                            calling_obj.onSearchComplete(param2[0]);\n                        }\n                    }\n\n                },\n                onInvalidateSelection: function () {\n                    // console.log(\"onInvalidateSelection() -> Do Stuff........\");\n                    // $('#selction-ajax').html('You selected: none');\n                }\n            });\n            /*\n            $(\"body\").on('click', '#tcs_enterstudent_table > tbody > tr', function (event) {\n                // console.log(\"Clicked inside the row BITCH, what is the type: \" + event.target.type);\n                if (event.target.type !== 'radio') {\n                    $(':radio', this).trigger('click');\n                }\n            });\n            // $('#autocomplete').keypress(function (e) {\n            $auto_obj.keypress(function (e) {\n                // Here's an example of the card being scanned:\n                // % 001028120 ?; 6018190723618365 ? +691606639 ?\n                var actual_id = null,\n                    charCode = e.which;\n                // keycode 37 = %\n                //  13 = return\n                //  9 = tab\n                that.keyStrokeCount = 0;\n                //\n                if ((e.keyCode === 37 || charCode === 37) && that.keyStrokeCount === 0) {\n                    that.isBarCodeReader = 1;\n                    // $('#tcs_std_list_spinner').css(\"visibility\", \"visible\");\n                    that.temp_userid = '';\n                    that.mask = '';\n                    // return;\n                }\n                // console.log(\"keypress -> what is the charcode: \" + charCode + \" and value: \" + this.value);\n\n                //\n                that.keyStrokeCount++;\n                //\n                if (this.value.length === 9 && that.isBarCodeReader === 0) {\n\n                    console.log(\"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\");\n                    console.log(\"keypress -> length is 9 and it's barcode\");\n                    that.keyStrokeCount = 0;\n                    // TCS.student_list.clear_fields_for_newStudentEntry();\n                    // TCS.student_list.process_entry(this.value);\n                    return true;\n                }\n                // do stuff with barcode entry\n                if (that.isBarCodeReader) {\n                    // store the input\n                    that.temp_userid = that.temp_userid + String.fromCharCode(charCode);\n                    // console.log(\"Building id, now its: \" + that.temp_userid);\n                    that.mask += \"*\";\n                    // $('#autocomplete').val(that.mask);\n                    $auto_obj.val(that.mask);\n                }\n                // if (/[%]\\d+[?][;]\\d+[?][+]\\d+[?]/.test(TCS.student_list.temp_userid) && TCS.student_list.isBarCodeReader === 1) {\n                // if the card reader reaches the end the keycode is 13 (return) process now.....\n                if (charCode === 13 && that.isBarCodeReader === 1) {\n                    // console.log(\"keypress -> regex and it's barcode\");\n                    //\n                    // $('#tcs_std_list_spinner').css(\"visibility\", \"hidden\");\n                    //\n                    // that.$exams.focus();\n                    actual_id = that.temp_userid.substring(1, 10);\n                    that.temp_userid = '';\n                    // that.$userid.val(actual_id);\n                    //\n                    that.keyStrokeCount = 0;\n                    that.isBarCodeReader = 0;\n                    // that.clear_fields_for_newStudentEntry();\n                    // // that.$userid.val(actual_id);\n                    // // that.$comments.html('');\n                    // that.process_entry(actual_id);\n                    console.log(\"Whats the final id of this MORON: \" + actual_id);\n                    that.stored_idnumber = actual_id;\n                    console.log(\"keypress -> PROCESS ENTRY NOW PART B\");\n                    // $('#autocomplete').val(actual_id);\n                    $auto_obj.val(actual_id);\n                    return true;\n                }\n            });\n            /*\n            $(\"body\").on('keydown', '#tcs_enter_student_form', function (event) {\n                console.log(\"Have hit keydown key\");\n            });\n\n            // $('#tcs_enter_student_form').keypress(function (e) {\n            $(\"body\").on('keypress', '#tcs_enter_student_form', function (event) {\n                console.log(\"Have hit keypress key\");\n                // tcs_enter_student_form\n                if (event.which == 13) {\n                    // $('form#login').submit();\n                    console.log(\"Have hit the enter key\");\n                    if (that.checkForm()) {\n                        console.log(\"Form is good to go\");\n                    } else {\n                        console.log(\"Form FAIL\");\n                    }\n                    return false;    //<---- Add this line\n                }\n            });\n\n            $(\"body\").on('submit', 'data-action=\"save\"', function (event) {\n            */\n        }\n    };\n});\n"],"file":"tcs_autocomp.min.js"}