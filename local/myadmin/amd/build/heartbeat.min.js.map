{"version":3,"file":"heartbeat.min.js","names":["define","$","MyAdminLib","changePage","page","stop","start","getDashStats","jaxyPromise","call","params","hash","getHash","class","dashUpdate","data","dash_hash","chunk","stat_name","text","stat_data","isAdmin","is_admin","bootstrapTable","student_table_list","setHash","name","value","err","clearInterval","window","DALO","console","log","that","setInterval","then","response","localStorage","dash_refresh_rate"],"sources":["../src/heartbeat.js"],"sourcesContent":["define([\n    'jquery',\n    'local_myadmin/myadmin_lib',\n\n], function($, MyAdminLib) {\n        'use strict';\n        // let's keep the scope of this module available async functions.\n        /** Dash Stats - AJAX REQUEST\n         * Description: Get the data for any dash stat and display it.\n         * The callback will resolve with all the data.\n         * return resolved data\n         */\n        return {\n            /** Get Dash Stats AJAX REQUEST -> PROMISE\n             * Description: This will fetch all dash card stats\n             * the callback will resolve with all the data.\n             * @return resolved data\n             */\n            changePage: function (page) {\n                // console.log(\"HB -> changePage() -> START\");\n                // console.log(\"HB -> changePage() -> what is the page passed in: \" + page);\n                if (page != \"page_dashboard\") {\n                    this.stop();\n                } else {\n                    this.start();\n                }\n            },\n\n            // registerEvent: function (data) {\n            //     console.log(\"registerEvent() -> ============= START =============\");\n            //     console.log(\"registerEvent() -> what is data: \" + data);\n            // },\n\n\n             /** Get Dash Stats AJAX REQUEST -> PROMISE\n             * Description: This will fetch all dash card stats\n             * the callback will resolve with all the data.\n             * @return resolved data\n             */\n            getDashStats: function () {\n\n                return MyAdminLib.jaxyPromise({\n                    'call': 'getDashStats',\n                    'params': {\n                        'hash': MyAdminLib.getHash(\"myadmin_dash_hash\")\n                    },\n                    'class': 'Stats'\n                });\n            },\n\n            /** Get User List in Centre AJAX REQUEST -> PROMISE\n             * Description: This will fetch all users\n             * the callback will resolve with all the data.\n             * @return resolved data\n             */\n            // getTableData: function () {\n            //     return MyAdminLib.jaxyPromise({\n            //         'call': 'getUsersInExam',\n            //         'params': {\n            //             // 'hash': MyAdminLib.getHash(\"myadmin_s_table_hash\")\n            //             'hash': MyAdminLib.getHash(\"myadmin_dash_hash\")\n            //         },\n            //         'class': 'StudentListAjax'\n            //     });\n            // },\n\n            /** Update all Dashboard Stat Cards\n             * Description:\n             *\n             * @return nothing, just update the DOM\n             */\n            dashUpdate: function (data) {\n\n                if (MyAdminLib.getHash(\"myadmin_dash_hash\") != data.dash_hash) {\n\n                    try {\n                        // =====================================================\n                        // =============== Update The Stat Cards ===============\n                        for (var chunk in data.data) {\n                            $('.' + data.data[chunk]['stat_name']).text(data.data[chunk]['stat_data']);\n                        }\n\n                        if (MyAdminLib.isAdmin() && data.is_admin) {\n                            $('#myadmin_student_table_wacka').bootstrapTable('load', data.student_table_list);\n                        }\n\n                        // update the hash in the local storage\n                        // var d = new Date(),\n                            // n = d.toLocaleTimeString();\n\n                        // =====================================================\n                        // =============== Update The Student List ===============\n                        MyAdminLib.setHash({name: \"myadmin_dash_hash\", value: data.dash_hash});\n                    } catch (err) {\n                        // stop the interval\n                        clearInterval(window.DALO);\n                    }\n                }\n            },\n\n            /** Update all the list of students if necessary\n             * Description:\n             *\n             * @return nothing, just update the DOM\n             */\n            // sTableUpdate: function (data) {\n\n            //     if (MyAdminLib.getHash(\"myadmin_dash_hash\") != data.dash_hash) {\n\n            //         MyAdminLib.setHash({name: \"myadmin_dash_hash\", value: data.dash_hash});\n\n            //         var d = new Date();\n            //         var n = d.toLocaleTimeString();\n\n            //         $('#myadmin_student_table_wacka').bootstrapTable('load', data.users_in_centre);\n            //     }\n            // },\n\n            start: function(page) {\n                // tc_init will have the starting page and will be passed to here. Only run\n                // interval if the dashboard is the current page.\n                if (page != \"page_dashboard\") {\n                    return;\n                }\n\n                console.log(\"HB -> STARTING..................\");\n                var that = this;\n                if (typeof window.DALO == 'undefined') {\n                    console.log(\"HB -> Initiating HeartBeat.\");\n                    console.log(\"HB -> You can stop the HB by typing this into the console: clearInterval(window.DALO);\");\n                    // the variable is defined\n                    if (MyAdminLib.getHash(\"dash_refresh_rate\") == 'undefined') {\n                        // console.log(\"heartbeat.js -> ERROR the data_refresh_rate was not set.\");\n                        return;\n                    }\n                    // *** NOTE *** To stop the heartbeat simple clear the interval\n                    // clearInterval(window.DALO);\n                    window.DALO = setInterval(function () {\n                        console.log(\"-------/\\-----/\\-----ba boomp------/\\-------/\\------/\\----\");\n\n                        // TODO: this needs to be changed to a registration system so any page\n                        // can register a heartbeat\n                        that.getDashStats().then(function (response) {\n                            // console.log(\"Interval -> going to call update function dashUpdate\");\n                            that.dashUpdate(response);\n                        });\n\n                    }, (localStorage[\"dash_refresh_rate\"] * 1000));\n                }\n            },\n\n            stop: function() {\n                clearInterval(window.DALO);\n            }\n        };\n    }\n);"],"mappings":"AAAAA,OAAM,2BAAC,CACH,QAAQ,CACR,2BAA2B,CAE9B,CAAE,SAASC,CAAC,CAAEC,CAAU,CAAE,CACnB,YAAY,CAOZ,MAAO,CAMHC,UAAU,CAAE,SAAAA,WAAUC,CAAI,CAAE,CAGxB,GAAY,gBAAgB,EAAxBA,CAAwB,CAAE,CAC1B,IAAI,CAACC,IAAI,EACb,CAAC,IAAM,CACH,IAAI,CAACC,KAAK,EACd,CACJ,CAAC,CAaDC,YAAY,CAAE,SAAAA,aAAA,CAAY,CAEtB,MAAO,CAAAL,CAAU,CAACM,WAAW,CAAC,CAC1BC,IAAA,CAAQ,cAAc,CACtBC,MAAA,CAAU,CACNC,IAAA,CAAQT,CAAU,CAACU,OAAO,CAAC,mBAAmB,CAClD,CAAC,CACDC,KAAA,CAAS,OACb,CAAC,CACL,CAAC,CAuBDC,UAAU,CAAE,SAAAA,WAAUC,CAAI,CAAE,CAExB,GAAIb,CAAU,CAACU,OAAO,CAAC,mBAAmB,CAAC,EAAIG,CAAI,CAACC,SAAS,CAAE,CAE3D,GAAI,CAGA,IAAK,GAAI,CAAAC,CAAK,GAAI,CAAAF,CAAI,CAACA,IAAI,CAAE,CACzBd,CAAC,CAAC,GAAG,CAAGc,CAAI,CAACA,IAAI,CAACE,CAAK,CAAC,CAAAC,SAAa,CAAC,CAACC,IAAI,CAACJ,CAAI,CAACA,IAAI,CAACE,CAAK,CAAC,CAAAG,SAAa,CAC7E,CAEA,GAAIlB,CAAU,CAACmB,OAAO,EAAE,EAAIN,CAAI,CAACO,QAAQ,CAAE,CACvCrB,CAAC,CAAC,8BAA8B,CAAC,CAACsB,cAAc,CAAC,MAAM,CAAER,CAAI,CAACS,kBAAkB,CACpF,CAQAtB,CAAU,CAACuB,OAAO,CAAC,CAACC,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAEZ,CAAI,CAACC,SAAS,CAAC,CACzE,CAAE,MAAOY,CAAG,CAAE,CAEVC,aAAa,CAACC,MAAM,CAACC,IAAI,CAC7B,CACJ,CACJ,CAAC,CAoBDzB,KAAK,CAAE,SAAAA,MAASF,CAAI,CAAE,CAGlB,GAAY,gBAAgB,EAAxBA,CAAwB,CAAE,CAC1B,MACJ,CAEA4B,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAC/C,GAAI,CAAAC,CAAI,CAAG,IAAI,CACf,GAA0B,WAAW,EAAjC,MAAO,CAAAJ,MAAM,CAACC,IAAmB,CAAE,CACnCC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC1CD,OAAO,CAACC,GAAG,CAAC,wFAAwF,CAAC,CAErG,GAA+C,WAAW,EAAtD/B,CAAU,CAACU,OAAO,CAAC,mBAAmB,CAAgB,CAAE,CAExD,MACJ,CAGAkB,MAAM,CAACC,IAAI,CAAGI,WAAW,CAAC,UAAY,CAClCH,OAAO,CAACC,GAAG,CAAC,uDAA4D,CAAC,CAIzEC,CAAI,CAAC3B,YAAY,EAAE,CAAC6B,IAAI,CAAC,SAAUC,CAAQ,CAAE,CAEzCH,CAAI,CAACpB,UAAU,CAACuB,CAAQ,CAC5B,CAAC,CAEL,CAAC,CAAuC,GAAI,CAAxCC,YAAY,CAAAC,iBAA4B,CAChD,CACJ,CAAC,CAEDlC,IAAI,CAAE,SAAAA,KAAA,CAAW,CACbwB,aAAa,CAACC,MAAM,CAACC,IAAI,CAC7B,CACJ,CACJ,CAAC,CACJ"}