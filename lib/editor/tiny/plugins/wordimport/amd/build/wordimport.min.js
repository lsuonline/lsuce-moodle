define("tiny_wordimport/wordimport",["exports","editor_tiny/options","editor_tiny/uploader","editor_tiny/utils","./repository","./ui","core/notification"],(function(_exports,_options,_uploader,_utils,_repository,_ui,_notification){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Tiny tiny_wordimport for Moodle.
   *
   * @module      tiny_wordimport/wordimport
   * @copyright   2023 University of Graz
   * @author      Andr√© Menrath <andre.menrath@uni-graz.at>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.importWordFileHandler=_exports.droppedWordFileHandler=void 0,_uploader=_interopRequireDefault(_uploader),_notification=_interopRequireDefault(_notification);_exports.droppedWordFileHandler=async(editor,file)=>{try{const draftId=await uploadDraggedFile(editor,file),content=await(0,_repository.getProcessedDocxContent)(draftId,(0,_options.getContextId)(editor),file.name);insertRawHtml(editor,content)}catch(error){_notification.default.exception(error)}};_exports.importWordFileHandler=async editor=>{try{const file=await(0,_utils.displayFilepicker)(editor,"docx"),content=await(0,_repository.getProcessedDocxContent)(file.id,(0,_options.getContextId)(editor),file.file);insertRawHtml(editor,content)}catch(error){_notification.default.exception(error)}};const insertRawHtml=(editor,content)=>{const range=editor.selection.getRng();range.insertNode(range.createContextualFragment(content.html))},uploadDraggedFile=async(editor,file)=>{const blob=await readAsArrayBuffer(file),notification=(0,_ui.displayUploadNotification)(editor),draftFileUrl=await(0,_uploader.default)(editor,"docx",blob,file.name,(progress=>(0,_ui.updateNotificationProgress)(notification,progress)));return notification.close(),extractDraftId(draftFileUrl)},readAsArrayBuffer=file=>new Promise((resolve=>{const reader=new FileReader;reader.readAsArrayBuffer(file),reader.onload=()=>resolve(new Blob([reader.result],{type:file.type}))})),extractDraftId=draftFileUrl=>draftFileUrl.match(/\/draft\/(\d+)\//)[1]}));

//# sourceMappingURL=wordimport.min.js.map