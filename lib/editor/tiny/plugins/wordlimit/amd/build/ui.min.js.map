{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * User interface functionality for the word limit plugin for the Moodle TinyMCE 6 editor.\n *\n * @module    tiny_wordlimit/ui\n * @copyright 2023 University of Graz\n * @author    Andr√© Menrath <andre.menrath@uni-graz.at>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\n\nconst THEME_SILVER_WORDCOUNT_CLASSNAME = 'tox-statusbar__wordcount';\nconst WORD_BUFFER_BEFORE_WARNING_STATUS = 10;\n\nexport const addWordLimitElement = async(editor, wordlimit) => {\n    const wordLimitElement = await constructWordLimitElement(wordlimit);\n    let statusbarContainer = editor.getContainer().getElementsByClassName(THEME_SILVER_WORDCOUNT_CLASSNAME)[0];\n    statusbarContainer.insertAdjacentHTML('afterend', wordLimitElement);\n};\n\nconst constructWordLimitElement = async(wordlimit) => {\n    const wordlimitString = await getString('maxwordlimit', 'qtype_essay');\n    return `\n        <div class=\"tox-statusbar__wordlimit\">\n            ${wordlimitString}: ${wordlimit}\n        </div>\n    `;\n};\n\nexport const updateWordCountAlert = (editor, maxWordLimit) => {\n    let wordCount = editor.plugins.wordcount.getCount();\n    const wordCountElement = editor.getContainer().getElementsByClassName(THEME_SILVER_WORDCOUNT_CLASSNAME)[0];\n    if (maxWordLimit > wordCount + WORD_BUFFER_BEFORE_WARNING_STATUS) {\n        wordCountElement.classList.remove('warning');\n        wordCountElement.classList.remove('danger');\n    } else if (maxWordLimit >= wordCount) {\n        wordCountElement.classList.remove('danger');\n        wordCountElement.classList.add('warning');\n    } else {\n        wordCountElement.classList.add('danger');\n        wordCountElement.classList.remove('warning');\n    }\n};\n"],"names":["async","editor","wordlimit","wordLimitElement","constructWordLimitElement","getContainer","getElementsByClassName","insertAdjacentHTML","wordlimitString","maxWordLimit","wordCount","plugins","wordcount","getCount","wordCountElement","classList","remove","add"],"mappings":"kOA6BmCA,MAAMC,OAAQC,mBACvCC,uBAAyBC,0BAA0BF,WAChCD,OAAOI,eAAeC,uBALV,4BAKmE,GACrFC,mBAAmB,WAAYJ,yBAGhDC,0BAA4BJ,MAAAA,kBACxBQ,sBAAwB,mBAAU,eAAgB,6FAG9CA,6BAAoBN,mEAKE,CAACD,OAAQQ,oBACrCC,UAAYT,OAAOU,QAAQC,UAAUC,iBACnCC,iBAAmBb,OAAOI,eAAeC,uBApBV,4BAoBmE,GACpGG,aAAeC,UApBmB,IAqBlCI,iBAAiBC,UAAUC,OAAO,WAClCF,iBAAiBC,UAAUC,OAAO,WAC3BP,cAAgBC,WACvBI,iBAAiBC,UAAUC,OAAO,UAClCF,iBAAiBC,UAAUE,IAAI,aAE/BH,iBAAiBC,UAAUE,IAAI,UAC/BH,iBAAiBC,UAAUC,OAAO"}