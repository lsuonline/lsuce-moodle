{"version":3,"sources":["../src/manageproviders.js"],"names":["define","$","notification","ajax","templates","fragment","str","List","prevEditId","reloadRow","pid","row","action","callback","call","methodname","args","done","response","render","providermodel","result","replaceWith","fail","exception","reloadProviders","scope","resultHtml","parseHTML","html","listenEnableDisable","self","on","e","preventDefault","parents","data","enabled","hasClass","listenDelete","onConfirm","remove","providerName","find","text","get_strings","key","component","param","strings","delTitle","delConf","ok","cancel","confirm","listenEdit","turnEditingOff","provderId","sel","removeClass","updateProviderForm","exec","attr","contextid","parseInt","params","formdata","loadFragment","js","addClass","replaceNodeContents","form","source","val","trigger","serialize","detailsSel","successEl","length","successHTML","outerHTML","indexOf","newProviderEl","onReload","rowcell","append","focus","init","valueNames"],"mappings":"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","sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @package   filter_oembed\n * @copyright Guy Thomas / moodlerooms.com 2016\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Oembed provider management module.\n */\ndefine(['jquery', 'core/notification', 'core/ajax', 'core/templates', 'core/fragment', 'core/str',\n    'filter_oembed/list'],\n    function($, notification, ajax, templates, fragment, str, List) {\n        return {\n\n            prevEditId: null,\n\n            /**\n             * Reload provider row.\n             * @param {int} pid\n             * @param {jQuery} row\n             * @param {string|null} action\n             * @param {function|null} callback\n             */\n            reloadRow: function(pid, row, action, callback) {\n                action = !action ? 'reload' : action;\n                ajax.call([\n                    {\n                        methodname: 'filter_oembed_provider_manage',\n                        args: {\n                            pid: pid,\n                            action: action\n                        },\n                        done: function(response) {\n                            // Update row.\n                            templates.render('filter_oembed/managementpagerow', response.providermodel)\n                                .done(function(result) {\n                                    $(row).replaceWith(result);\n                                    row = $('#oembed-display-providers_' + pid);\n                                    if (typeof(callback) === 'function') {\n                                        callback(row);\n                                    }\n                                });\n                        },\n                        fail: function(response) {\n                            notification.exception(response);\n                        }\n                    }\n                ], true, true);\n            },\n\n            /**\n             * Reload all providers.\n             * @param {function|null} callback\n             */\n            reloadProviders: function(callback) {\n                ajax.call([\n                    {\n                        methodname: 'filter_oembed_providers',\n                        args: {\n                            scope: 'all'\n                        },\n                        done: function(response) {\n                            // Update table.\n                            templates.render('filter_oembed/managementpage', response)\n                                .done(function(result) {\n                                    var resultHtml = $($.parseHTML(result)).html();\n                                    $('#providermanagement').html(resultHtml);\n                                    if (typeof(callback) === 'function') {\n                                        callback();\n                                    }\n                                });\n                        },\n                        fail: function(response) {\n                            notification.exception(response);\n                        }\n                    }\n                ], true, true);\n            },\n\n            /**\n             * Listen for enable / disable action.\n             */\n            listenEnableDisable: function() {\n                var self = this;\n                $('#providermanagement').on('click', '.oembed-provider-actions .filter-oembed-visibility', function(e) {\n                    e.preventDefault();\n\n                    var row = $(this).parents('tr')[0];\n                    var pid = $(row).data('pid');\n                    var enabled = !$(row).hasClass('dimmed_text');\n                    var action = enabled ? 'disable' : 'enable';\n\n                    self.reloadRow(pid, row, action);\n                });\n            },\n\n            /**\n             * Listen for delete action.\n             */\n            listenDelete: function() {\n                var onConfirm = function(row) {\n\n                    var pid = $(row).data('pid');\n\n                    ajax.call([\n                        {\n                            methodname: 'filter_oembed_provider_manage',\n                            args: {\n                                pid: pid,\n                                action: 'delete'\n                            },\n                            done: function() {\n                                // Remove row.\n                                $(row).remove();\n                            },\n                            fail: function(response) {\n                                notification.exception(response);\n                            }\n                        }\n                    ], true, true);\n                };\n\n                $('#providermanagement').on('click', '.oembed-provider-actions .filter-oembed-delete', function(e) {\n                    e.preventDefault();\n\n                    var row = $(this).parents('tr')[0];\n                    var providerName = $($(this).parents('td').find('.list-providername')[0]).text();\n\n                    str.get_strings([\n                        {key: 'deleteprovidertitle', component: 'filter_oembed'},\n                        {key: 'deleteproviderconfirm', component: 'filter_oembed', param: providerName},\n                        {key: 'ok', component: 'core'},\n                        {key: 'cancel', component: 'core'}\n                    ]).done(function(strings) {\n                        var delTitle = strings[0];\n                        var delConf = strings[1];\n                        var ok = strings[2];\n                        var cancel = strings[3];\n                        notification.confirm(delTitle, delConf, ok, cancel, function() {\n                            onConfirm(row);\n                        });\n                    });\n                });\n            },\n\n            /**\n             * Listen for edit action.\n             */\n            listenEdit: function() {\n                var self = this;\n\n                /**\n                 * Turn editing off for a row by id\n                 * @param {string} providerId\n                 */\n                var turnEditingOff = function(provderId) {\n                    var sel = '#oembed-display-providers_' + provderId;\n                    $(sel).removeClass('oembed-provider-editing');\n                    $(sel + ' form').remove();\n                    $(sel + ' td div.alert').remove();\n                };\n\n                /**\n                 * Update the provider form with data.\n                 * @param string data - serialized form data.\n                 */\n                var updateProviderForm = function(pid, data, callback) {\n\n                    var rx = new RegExp('(?:course-)(\\\\S)');\n                    var result = rx.exec($('body').attr('class'));\n                    var contextid = parseInt(result[1]);\n                    var params;\n                    if (data) {\n                        params = {formdata: data, pid: pid};\n                    } else {\n                        params = {pid: pid};\n                    }\n\n                    fragment.loadFragment('filter_oembed', 'provider', contextid, params).done(\n                        function(html, js) {\n                            $('#oembed-display-providers_' + pid).addClass('oembed-provider-editing');\n                            templates.replaceNodeContents(\n                                $('#oembed-display-providers_' + pid + ' .oembed-provider-details'),\n                                html,\n                                js\n                            );\n                            if (typeof(callback) === 'function') {\n                                callback();\n                            }\n                        }\n                    );\n                };\n\n                 // Listen for click cancel.\n                $('#providermanagement').on('click', '.oembed-provider-actions .filter-oembed-edit', function(e) {\n                    e.preventDefault();\n\n                    var row = $(this).parents('tr')[0];\n                    var pid = $(row).data('pid');\n\n                    // Remove editing class from current row / previous row and delete form.\n                    if (self.prevEditId !== null) {\n                        turnEditingOff(self.prevEditId);\n                        turnEditingOff(pid);\n                    }\n\n                    self.prevEditId = pid;\n\n                    updateProviderForm(pid);\n                });\n\n                 // Listen for form click submit.\n                $('#providermanagement').on('click', '.oembed-provider-details form #id_submitbutton', function(e) {\n                    e.preventDefault();\n                    var row = $(this).parents('tr')[0];\n                    var pid = $(row).data('pid');\n                    var form = $(this).parents('form')[0];\n                    var source = $(form).find('input[name=\"source\"]').val();\n\n                    $(form).trigger('save-form-state');\n                    var data = $(form).serialize();\n                    updateProviderForm(pid, data, function() {\n                        var detailsSel = '#oembed-display-providers_' + pid + ' .oembed-provider-details';\n                        var successSel = detailsSel + ' div.alert-success';\n                        var successEl = $(successSel);\n\n                        if (successEl.length) {\n                            var successHTML = successEl[0].outerHTML;\n                            turnEditingOff(pid);\n\n                            // Get new provider id and set pid to it so correct row is targeted on reload.\n                            if (source.indexOf('download::') > -1) {\n                                var newProviderSel = detailsSel + ' .js-oembed-newprovider';\n                                var newProviderEl = $(newProviderSel);\n                                if (newProviderEl.length) {\n                                    pid = newProviderEl.data('newproviderid');\n                                }\n                            }\n\n                            /**\n                             * On reloading providers or single row append success HTML.\n                             */\n                            var onReload = function() {\n                                var rowcell = $('#oembed-display-providers_' + pid + ' td');\n                                $(rowcell).append(successHTML);\n                                $(rowcell).find(' div.alert-success').attr('tabindex', -1);\n                                $(rowcell).find(' div.alert-success').focus();\n                            };\n\n                            if (source.indexOf('download::') > -1) {\n                                // When a downloaded provider is saved, a new one is created as a local provider, so we\n                                // need to reload the full list.\n                                self.reloadProviders(onReload);\n                            } else {\n                                self.reloadRow(pid, row, 'reload', onReload);\n                            }\n                        }\n                    });\n                });\n\n                 // Listen for form click cancel.\n                $('#providermanagement').on('click', '.oembed-provider-details form #id_cancel', function(e) {\n                    e.preventDefault();\n                    var row = $(this).parents('tr')[0];\n                    turnEditingOff($(row).data('pid'));\n                });\n            },\n\n            /**\n             * Initialise.\n             */\n            init: function() {\n                var options = {\n                    valueNames: [ 'list-providername']\n                };\n\n                new List('providermanagement', options);\n\n                this.listenEnableDisable();\n                this.listenDelete();\n                this.listenEdit();\n            }\n        };\n    }\n);\n"],"file":"manageproviders.min.js"}