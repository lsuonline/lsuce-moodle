{"version":3,"sources":["../src/oembed.js"],"names":["define","$","preloader","responsiveContent","init","responsiveContentOnInsert","hasOembedClass","node","className","is","observer","MutationObserver","mutations","forEach","mutation","n","addedNodes","apply","find","targetNode","document","body","observe","attributes","childList","characterData","subtree","ready"],"mappings":"AAwBAA,OAAM,wBAAC,CAAC,QAAD,CAAW,yBAAX,CAAsC,iCAAtC,CAAD,CACF,SAASC,CAAT,CAAYC,CAAZ,CAAuBC,CAAvB,CAA0C,CACtC,MAAO,CACHC,IAAI,CAAE,eAAW,CA0Cb,CAtCgC,QAA5BC,CAAAA,yBAA4B,EAAW,IAMnCC,CAAAA,CAAc,CAAG,SAASC,CAAT,CAAe,CAChC,GAAI,CAACA,CAAI,CAACC,SAAV,CAAqB,CACjB,QACH,CACD,MAAOP,CAAAA,CAAC,CAACM,CAAD,CAAD,CAAQE,EAAR,CAAW,yCAAX,CACV,CAXsC,CAanCC,CAAQ,CAAG,GAAIC,CAAAA,gBAAJ,CAAqB,SAASC,CAAT,CAAoB,CACpDA,CAAS,CAACC,OAAV,CAAkB,SAASC,CAAT,CAAmB,CACjC,IAAK,GAAIC,CAAAA,CAAT,GAAcD,CAAAA,CAAQ,CAACE,UAAvB,CAAmC,CAC/B,GAAIT,CAAAA,CAAI,CAAGO,CAAQ,CAACE,UAAT,CAAoBD,CAApB,CAAX,CACA,GAAIT,CAAc,CAACC,CAAD,CAAlB,CAA0B,CAEtBJ,CAAiB,CAACc,KAAlB,CAAwBhB,CAAC,CAACM,CAAD,CAAD,CAAQW,IAAR,CAAa,0CAAb,CAAxB,CACH,CACJ,CACJ,CARD,CASH,CAVc,CAbwB,CAkCnCC,CAAU,CAAGC,QAAQ,CAACC,IAlCa,CAmCvCX,CAAQ,CAACY,OAAT,CAAiBH,CAAjB,CAVqB,CACjBI,UAAU,GADO,CAEjBC,SAAS,GAFQ,CAGjBC,aAAa,GAHI,CAIjBC,OAAO,GAJU,CAUrB,CACH,CAED,IAEAzB,CAAC,CAACmB,QAAD,CAAD,CAAYO,KAAZ,CAAkB,UAAW,CAEzBzB,CAAS,CAACe,KAAV,GAGAd,CAAiB,CAACc,KAAlB,EACH,CAND,CAOH,CApDE,CAsDV,CAxDC,CAAN","sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @package   filter_oembed\n * @copyright Guy Thomas / moodlerooms.com 2016\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Oembed main module.\n */\ndefine(['jquery', 'filter_oembed/preloader', 'filter_oembed/responsivecontent'],\n    function($, preloader, responsiveContent) {\n        return {\n            init: function() {\n                /**\n                 * Apply a mutation observer to track oembed-content being dynamically added to the page.\n                 */\n                var responsiveContentOnInsert = function() {\n                    /**\n                     * Does a node have the oembed-content class\n                     * @param {opbject} node (dom element)\n                     * @returns {boolean}\n                     */\n                    var hasOembedClass = function(node) {\n                        if (!node.className) {\n                            return false;\n                        }\n                        return $(node).is(\".oembed-content, .oembed-card-container\");\n                    };\n\n                    var observer = new MutationObserver(function(mutations) {\n                        mutations.forEach(function(mutation) {\n                            for (var n in mutation.addedNodes) {\n                                var node = mutation.addedNodes[n];\n                                if (hasOembedClass(node)) {\n                                    // Only apply responsive content to the newly added node for efficiency.\n                                    responsiveContent.apply($(node).find('> *:not(video):first-child, .oembed-card'));\n                                }\n                            }\n                        });\n                    });\n\n                    var observerConfig = {\n                        attributes: true,\n                        childList: true,\n                        characterData: true,\n                        subtree: true\n                    };\n\n                    // Note: Currently observing mutations throughout the document body - We might want to limit scope for\n                    // observation at some point in the future.\n                    var targetNode = document.body;\n                    observer.observe(targetNode, observerConfig);\n                };\n\n                responsiveContentOnInsert();\n\n                $(document).ready(function() {\n                    // Apply preloader listeners.\n                    preloader.apply();\n\n                    // Call responsive content on dom ready, to catch things that existed prior to mutation observation.\n                    responsiveContent.apply();\n                });\n            }\n        };\n    }\n);\n"],"file":"oembed.min.js"}